// Mocks generated by Mockito 5.2.0 from annotations
// in ditonton/test/presentation/bloc/popular_hptv_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:bloc/bloc.dart' as _i9;
import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/common/failure.dart' as _i7;
import 'package:ditonton/domain/entities/hptv/hptv.dart' as _i8;
import 'package:ditonton/domain/repositories/hptv_repository.dart' as _i2;
import 'package:ditonton/domain/usecases/hptv/get_popular_hptv.dart' as _i4;
import 'package:ditonton/presentation/bloc/hptv/hptv_popular_bloc.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeHptvRepository_0 extends _i1.Fake implements _i2.HptvRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

class _FakeGetPopularHptv_2 extends _i1.Fake implements _i4.GetPopularHptv {}

class _FakeHptvPopularState_3 extends _i1.Fake implements _i5.HptvPopularState {
}

/// A class which mocks [GetPopularHptv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularHptv extends _i1.Mock implements _i4.GetPopularHptv {
  MockGetPopularHptv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HptvRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeHptvRepository_0()) as _i2.HptvRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.Hptv>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i7.Failure, List<_i8.Hptv>>>.value(
              _FakeEither_1<_i7.Failure, List<_i8.Hptv>>())) as _i6
          .Future<_i3.Either<_i7.Failure, List<_i8.Hptv>>>);
}

/// A class which mocks [HptvPopularBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockHptvPopularBloc extends _i1.Mock implements _i5.HptvPopularBloc {
  MockHptvPopularBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.GetPopularHptv get getPopularHptv =>
      (super.noSuchMethod(Invocation.getter(#getPopularHptv),
          returnValue: _FakeGetPopularHptv_2()) as _i4.GetPopularHptv);
  @override
  _i5.HptvPopularState get state =>
      (super.noSuchMethod(Invocation.getter(#state),
          returnValue: _FakeHptvPopularState_3()) as _i5.HptvPopularState);
  @override
  _i6.Stream<_i5.HptvPopularState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i5.HptvPopularState>.empty())
          as _i6.Stream<_i5.HptvPopularState>);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  void add(_i5.HptvPopularEvent? event) =>
      super.noSuchMethod(Invocation.method(#add, [event]),
          returnValueForMissingStub: null);
  @override
  void onEvent(_i5.HptvPopularEvent? event) =>
      super.noSuchMethod(Invocation.method(#onEvent, [event]),
          returnValueForMissingStub: null);
  @override
  void emit(_i5.HptvPopularState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void on<E extends _i5.HptvPopularEvent>(
          _i9.EventHandler<E, _i5.HptvPopularState>? handler,
          {_i9.EventTransformer<E>? transformer}) =>
      super.noSuchMethod(
          Invocation.method(#on, [handler], {#transformer: transformer}),
          returnValueForMissingStub: null);
  @override
  void onTransition(
          _i9.Transition<_i5.HptvPopularEvent, _i5.HptvPopularState>?
              transition) =>
      super.noSuchMethod(Invocation.method(#onTransition, [transition]),
          returnValueForMissingStub: null);
  @override
  _i6.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  void onChange(_i9.Change<_i5.HptvPopularState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
}
